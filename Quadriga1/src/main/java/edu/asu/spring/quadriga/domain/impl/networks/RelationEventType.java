//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.01 at 10:33:36 AM MST 
//


package edu.asu.spring.quadriga.domain.impl.networks;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>Java class for relationEventType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="relationEventType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://digitalhps.org/creationEvents-model}creationEvent">
 *       &lt;choice maxOccurs="2" minOccurs="2">
 *         &lt;element name="relation_creator" type="{http://www.w3.org/2001/XMLSchema}anyURI"/>
 *         &lt;element name="relation" type="{http://digitalhps.org/creationEvents-model}RelationType"/>
 *       &lt;/choice>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "relationEventType", propOrder = {
		"relationCreatorOrRelation"
})
public class RelationEventType
extends CreationEvent
{

	@XmlElements({
		@XmlElement(name = "relation", type = RelationType.class),
		@XmlElement(name = "relation_creator", type = String.class)
	})
	protected List<Object> relationCreatorOrRelation;



	/**
	 * Gets the value of the relationCreatorOrRelation property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list,
	 * not a snapshot. Therefore any modification you make to the
	 * returned list will be present inside the JAXB object.
	 * This is why there is not a <CODE>set</CODE> method for the relationCreatorOrRelation property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * <pre>
	 *    getRelationCreatorOrRelation().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link RelationType }
	 * {@link String }
	 * 
	 * 
	 */
	public List<Object> getRelationCreatorOrRelation() {
		if (relationCreatorOrRelation == null) {
			relationCreatorOrRelation = new ArrayList<Object>();
		}
		return this.relationCreatorOrRelation;
	}

	/**
	 * Extract {@link RelationType} out of a {@link RelationEventType} object
	 * @param re			{@link RelationEventType} target object for this method 
	 * @return				{@link RelationType} object
	 */
	public RelationType  getRelation(){
		RelationType relationType = null;
		List <?> ee = getRelationCreatorOrRelation();
		Iterator <?> Iee=ee.iterator();
		while(Iee.hasNext()){
			Object o = Iee.next();
			if(o instanceof RelationType){
				relationType = (RelationType) o;
			}
		}
		return relationType;
	}

	/**
	 * Helper class to get relation event ID
	 * @param re
	 * @return
	 */
	public String getRelationEventId(RelationEventType relationEventType){
		List<JAXBElement<?>> relationEventElementList = relationEventType.getIdOrCreatorOrCreationDate();
		Iterator <JAXBElement<?>> relationEventElementIterator = relationEventElementList.iterator();
		while(relationEventElementIterator.hasNext()){
			JAXBElement<?> relationEventElement = (JAXBElement<?>) relationEventElementIterator.next();
			if(relationEventElement.getName().toString().contains("id")){
				return relationEventElement.getValue().toString();
			}
		}
		return "";
	}

	
	public String getRelationEventSourceReference(){
		List<JAXBElement<?>> relationEventElementList = this.getIdOrCreatorOrCreationDate();
		Iterator <JAXBElement<?>> relationEventElementIterator = relationEventElementList.iterator();
		while(relationEventElementIterator.hasNext()){
			JAXBElement<?> relationEventElement = (JAXBElement<?>) relationEventElementIterator.next();
			if(relationEventElement.getName().toString().contains("source_reference")){
				return relationEventElement.getValue().toString();
			}
		}
		return null;
	}
	
}

