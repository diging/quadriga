allNetworks=Match (n:Term) with n.interpretation as inter, count(*) as occurences ORDER BY occurences DESC limit 2 with inter match (term:Term {interpretation:inter}) with (term) Match (termParts:TermParts)<-[:hasTermParts]-(term),p=shortestPath((termParts)-[*]-(r:RelationEvent)) REturn rels(p), nodes(p)
concepts.of.statements=match (app:AppellationEvent) - [r:hasTerm] -  (term:Term)  where app.id in [{nodes.id.list}] return app, term;
concepts.belonging.to.same.statement=match (r:Relation)-[*]->(t1:Term),(r:Relation)-[*]->(t2:Term), (re:RelationEvent)-[*]->(r:Relation)  where (t1.interpretation ={ti1} and t2.interpretation = {ti2})  return re
